*** Service de partage de DVDs ***


Description
--------------------

TP Projet de Base de Données & Internet :

Développement d'une application Web à base de JSP et de JDBC 
permettant la gestion d'un service de partage de DVDs.


MASTER 2 Professionnel IAGL :
	Ingénierie et Architecture des Grands Logiciels


Auteurs
--------------------

DELEBARRE Johann (j.delebarre@etudiant.univ-lille1.fr)
WYLLEMAN Julien (julien.wylleman@etudiant.univ-lille1.fr)


Technologies
--------------------

Apache Ant (http://ant.apache.org/)
Apache Tomcat (http://tomcat.apache.org/)
Java (http://java.sun.com/)
PostgreSQL (http://www.postgresql.org/)


Version 1.0 - 14 dec. 2006
--------------------

Apache Ant version 1.6.5
Apache Tomcat version 5.5.20
Java version 1.5.0_06
PostgreSQL 8.1.5


Structure de l'archive
--------------------

+---TpDvdDelebarreWylleman
    +---conf
    +---lib
    +---src
        +---controllers
        +---dao
		    +---business
			+---core
			+---postgresql
        +---models
        +---views
    +---static
        +---META-INF
        +---WEB-INF
        +---uml
            +---classes
            +---bdd


Prérequis
--------------------

/!\ /!\ /!\ /!\ /!\

	# Utilisateur 'lemeur':
	
	Veuillez créer un utilisateur 'lemeur' de la base de données,
	ayant les droits du super utilisateur et de création de table.
	
	Login:	lemeur
	Pass:	lemeur
	
	Cet utilisateur est utilisé par l'application en divers endroits.
	Notamment à la création de la base de données et du pool de connexions.


	# CATALINA_HOME: 
	
	Veuillez créer la variable d'environnement 'CATALINA_HOME'
	contenant le chemin vers la racine du répertoire de Tomcat.

	Veuillez également donner les droits de lecture/écriture 
	du répertoire de Tomcat à l'utilisateur qui executera 
	les commandes de l'application. Ceci afin de pouvoir déployer
	correctement le fichier war dans le répertoire webapps de Tomcat.
	
/!\ /!\ /!\ /!\ /!\


Détails du TP
--------------------

Ci-joint le manuel utilisateur: 'Manual.html'


1. Fonctions du service de partage de DVDs

Les fonctions proposées pour le partage de DVDs sont les suivantes :
	# se 'logger'
	# rechercher un dvd
	# emprunter un dvd
	# reserver un dvd
	# voir les dvds empruntes et reserves
	# rendre un dvd
	# annuler la reservation d'un dvd
	# afficher les détails d'un dvd
	# commenter un dvd
	# se 'delogger'


2. Architecture logicielle


2.1. Description générale

Le service de partage de DVDs a été développé comme suit.
La présentation à l'utilisateur (les vues) est conçue à base de JSP.
Le traitement associé à chaque fonctionnalité est effectué par une Servlet.
Les Servlets communiquent avec la base de données par l'intermédiaire de DAO.
Chaque DAO est fourni par une fabrique et interagit avec la base de données.
Chaque DAO cree, modifie et detruit les objets metiers dont il a la charge.


2.2. Détails techniques

les dao create n'utilisent pas l'auto increment des tables
puisque la version de jdbc ne gere pas la recuperation
des clefs generees a l'insertion de nouvelles entrees 
dans les tables. C'est pourquoi chaque dao gere lui-meme
un semblant d'auto-increment en specifiant la clef d'un
nouvel enregistrement comme etant la somme +1 des lignes
de la table.
-> bug possible au niveau du script d'initialisation des
tables. Attention a bien respecter cette regle: 
le premier enregistrement a pour clef 1, le 2me 2, etc...

clef etrangere null possible dans table dvds car le dao dvd
cree une nouvelle entree dans la table dvds avec des 
valeurs null des clefs etrangere.
Ancienne version etait not null mais il falait 
	soit specifier la valeur des clefs etrangeres 
en param de la methode create (generique) donc pas terrible;
	soit mettre des valeurs bidons en clefs etrangeres
qui devait exsiter. Ce qui revenait a mettre null.

PostGreSQLCommons gère le pool de connexion et se preoccupe
de distribuer les connexions au divers DAO.

Un objet commun (PostGreSQLCommons) s'occupe de recuperer 
une connexion, d'en gerer le cycle de vie et d'effectuer 
commit et rollback afin de liberer les DAO de ces contraintes.

La liste des categories est calculee une fois pour toute,
a l'initialisation. De toutes facon, il est impossible d'ajouter
une nouvelle categories par l'application.
Si une nouvelle categories est ajoutee, relancer l'application.

Des triggers empechent les utilisateurs :
	* d'emprunter plus de 3 DVDs
	* de reserver plus de 3 DVDs
	* de reserver un DVD qu'il a emprunte.
Néanmoins, les pages de l'application ne permettent pas 
a un utilisateur de tenter d'effectuer ces actions 
en n'affichant pas les liens le permettant.
Il y a ici une double verification: 
	* une fonctionalite restreinte n'est pas accessible 
	* meme si l'application etait 'pirate', la base de donnees ne 
	permettrait pas les etats incoherents.
	

3. Utilisation du service de partage de DVDs

Toute la phase de compilation/execution du projet est gérée par Ant 
au moyen des fichiers 'build.xml' et 'build.properties'.

/!\ 
	Toutes les manipulations expliquées ci-aprés sont à effectuer 
	à la racine du projet. 
/!\


3.0. Listes des commandes Ant 

	# ant clean: 	
		Néttoie le répertoire de l'application: supprime les répertoires de compilation, de distribution et le fichier de déploiement.
	# ant compile: 	
		Compile les fichiers du répertoire source 'src'.
	# ant database: 
		Ne fonctionne pas.
	# ant deploy: 	
		Déploie l'application dans le répertoire de déploiement de Tomcat '${catalina.home}/webapps/'.
	# ant dist: 
		Génère l'archive de distribution de l'application dans le répertoire de distribution '${dist}'.
	# ant doc: 
		Génère la documentation du code (javadoc) dans le répertoire de documentation '${doc}'.
	# ant help: 
		Affiche cet aide.
	# ant prepare: 
		Crée la structure de répertoires '${build}' recevant les fichiers de compilation.
	# ant run: 
		Lance la page principale de l'application spécifiée (ici: '${webpage}') dans le navigateur Web spécifié dans le fichier de propriétés (ici: '${browser}')
	# ant undeploy: 
		Annule le déploiement de l'application et supprime tous les fichiers et répertoires relatifs à l'application du répertoire de déploiement de Tomcat.
	# ant war: 
		Crée le fichier war de déploiement '${warfile}'.

Remarque: Les variables '${x}' resultent de l'execution de la commande par Ant.
	Elles sont soit ecritent dans le 'build.xml' soit dans le 'build.properties'.


3.1. Gestion de la base de données

Cette partie n'est à faire qu'une seule fois au premier lancement.
La commande suivante permet de créer et d'initialiser la base de 
donnees utilisée par l'application. Elle doit être exécutée
par l'utilisateur lemeur.
Six fichiers de configurations sont nécessaires à la bonne
initialisation de la base: 

+---conf
    +---create.sql
    +---delete.sql
    +---general.sql
    +---insert.sql
    +---triggers.sql
    +---views.sql


	$> psql -d postgres -U lemeur -f conf/general.sql
	password: lemeur

Remarque: 
Si l'exécution de la commande précédente semble générer des erreurs,
vous pouvez alternativement exécuter la commande suivant en tant
qu'utilisateur postgres:

	$> psql -d postgres -f conf/general.sql
	password: <password de l'utilisateur postgres>


3.2. Compilation du code source

	$> ant compile
	
Remarque: 
Le compilation des servlets génère des warnings, ce n'est pas un problème.


3.3. Création de l'archive war

Le fichier de configuration de Ant, 'build.properties', 
définit le nom de l'archive war grâce à la variable 'warfilename'.

	$> ant war


3.4. Déploiement de l'archive war dans Tomcat

Ant permet le déploiement automatique de l'archive war dans Tomcat. 
Afin d'assurer le bon fonctionnement de cette tache, 
veillez à avoir affecter à la variable d'environnement 'CATALINA_HOME' 
le nom complet du répertoire dans lequel vous avez installé Tomcat.

	$> ant deploy

Remarque:
Il existe la commande 'ant undeploy' permettant de retirer le war.
Cette commande est appelée avant chaque déploiement ce qui
peut parfois déclencher des erreurs dans la console, 
notamment au premier deploiement. Pas d'inquiétudes, cette erreur
n'a pas d'incidence sur le reste de l'exécution.


3.5. Lancement de Tomcat

Nous n'indiquerons pas comment lancer Tomcat.


3.6. Lancement du navigateur sur l'application

Encore une fois, il est possible d'utiliser Ant pour ce faire.

	$> ant run
	
Cette commande lance le browser web, spécifié dans le fichier
de configuration 'build.properties', sur la page d'accueil
du service de partage de DVDs. L'adresse de cette page est, 
elle aussi, déclarée dans le fichier de configuration de Ant.

Si vous ne désirez pas utiliser cette fonctionalité ou si
celle-ci ne fonctionne pas correctement, vous pouvez toujours
positionner votre browser web à l'adresse suivante:
	
	http://localhost:8080/dvdthequeDelebarreWylleman/
	
Il existe plusieurs profils utilisateurs de l'application:
	# Johann DELEBARRE (login: jojo / pass: toto)
	# Julien WYLLEMAN (login: juju / pass: titi)
	# Anne-Françoise Le Meur (login: lemeur / pass: lemeur)


Enjoy ! 
